name: Build Executable with UI

on:
  push:
    branches: [ main, master, copilot/** ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read

jobs:
  build-windows:
    name: Build Windows Executable
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build executable with PyInstaller
      run: |
        pyinstaller gold_prediction_gui.spec
        
    - name: Test executable exists
      run: |
        if (Test-Path -Path "dist/GoldPredictionModel.exe") {
          Write-Host "✓ Executable built successfully"
          $fileSize = (Get-Item "dist/GoldPredictionModel.exe").Length / 1MB
          Write-Host "  File size: $([math]::Round($fileSize, 2)) MB"
        } else {
          Write-Error "✗ Executable not found"
          exit 1
        }
      shell: pwsh
      
    - name: Upload Windows Executable
      uses: actions/upload-artifact@v4
      with:
        name: GoldPredictionModel-Windows
        path: dist/GoldPredictionModel.exe
        retention-days: 30
        
  build-linux:
    name: Build Linux Executable
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build executable with PyInstaller
      run: |
        pyinstaller gold_prediction_gui.spec
        
    - name: Test executable exists
      run: |
        if [ -f "dist/GoldPredictionModel" ]; then
          echo "✓ Executable built successfully"
          ls -lh dist/GoldPredictionModel
        else
          echo "✗ Executable not found"
          exit 1
        fi
        
    - name: Upload Linux Executable
      uses: actions/upload-artifact@v4
      with:
        name: GoldPredictionModel-Linux
        path: dist/GoldPredictionModel
        retention-days: 30
        
  build-macos:
    name: Build macOS Executable
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build executable with PyInstaller
      run: |
        pyinstaller gold_prediction_gui.spec
        
    - name: Test executable exists
      run: |
        if [ -f "dist/GoldPredictionModel" ]; then
          echo "✓ Executable built successfully"
          ls -lh dist/GoldPredictionModel
        else
          echo "✗ Executable not found"
          exit 1
        fi
        
    - name: Upload macOS Executable
      uses: actions/upload-artifact@v4
      with:
        name: GoldPredictionModel-macOS
        path: dist/GoldPredictionModel
        retention-days: 30
        
  test-workflow:
    name: Test Workflow Completion
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux, build-macos]
    
    steps:
    - name: Verify all builds completed
      run: |
        echo "✓ All platform builds completed successfully!"
        echo "  - Windows executable built"
        echo "  - Linux executable built"
        echo "  - macOS executable built"
        echo ""
        echo "Executables are available as artifacts for download."
